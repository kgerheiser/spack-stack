# Concretize various environments with different compilers, mpi, and OS.
name: concretize-test

on:
  pull_request:
  push:
  workflow_dispatch:

# Use custom shell with -l so .bash_profile is sourced
defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  macos_concretize:
    strategy:
      matrix:
        compiler: [clang, apple-clang, gcc@10.3.0]
        app: [empty, jedi-ewok, jedi-fv3, jedi-tools, jedi-ufs, jedi-um, nceplibs, soca]
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: install-env
        uses: ./.github/actions/setup-spack-stack
        with:
          app: ${{ matrix.app }}
          compiler: ${{ matrix.compiler }}
          mpi: openmpi
          path: ${{ github.workspace }}
          concretize_only: 'true'

  linux_concretize:
    strategy:
      matrix:
        compiler: [gcc@9.4.0, gcc@10.3.0]
        app: [empty, jedi-ewok, jedi-fv3, jedi-tools, jedi-ufs, jedi-um, nceplibs, soca]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: install-env
        uses: ./.github/actions/setup-spack-stack
        with:
          app: ${{ matrix.app }}
          compiler: ${{ matrix.compiler }}
          mpi: openmpi
          path: ${{ github.workspace }}
          concretize_only: 'true'

  intel_concretize:
    strategy:
      matrix:
        app: [empty, jedi-ewok, jedi-fv3, jedi-tools, jedi-ufs, jedi-um, nceplibs, soca]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: install-env
        uses: ./.github/actions/setup-spack-stack
        with:
          app: ${{ matrix.app }}
          compiler: intel
          mpi: intel-oneapi-mpi
          path: ${{ github.workspace }}
          concretize_only: 'true'
  
  